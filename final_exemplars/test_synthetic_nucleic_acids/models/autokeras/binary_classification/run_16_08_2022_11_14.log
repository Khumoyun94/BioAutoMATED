2022-08-16 12:18:27,487 - log.py - [30m[47m[1m-------------------------------DeepSwarm settings-------------------------------[0m
2022-08-16 12:18:27,514 - log.py - [32m{
    "DeepSwarm": {
        "aco": {
            "ant_count": 4,
            "greediness": 0.5,
            "pheromone": {
                "decay": 0.1,
                "evaporation": 0.1,
                "start": 0.1,
                "verbose": false
            }
        },
        "backend": {
            "batch_size": 64,
            "epochs": 5,
            "loss": "binary_crossentropy",
            "patience": 5,
            "verbose": 0
        },
        "flat_nodes": [
            "FlattenNode",
            "DenseNode",
            "DropoutFlatNode",
            "BatchNormalizationFlatNode"
        ],
        "max_depth": 3,
        "metrics": "binary_crossentropy",
        "reuse_patience": 1,
        "save_folder": "./final_exemplars/test_synthetic_nucleic_acids/models/deepswarm/binary_classification/",
        "spatial_nodes": [
            "InputNode",
            "Conv2DNode",
            "DropoutSpatialNode",
            "BatchNormalizationNode",
            "Pool2DNode"
        ]
    },
    "Nodes": {
        "BatchNormalizationFlatNode": {
            "attributes": {},
            "transitions": {
                "DenseNode": 1.1,
                "DropoutFlatNode": 1.1,
                "OutputNode": 0.9
            },
            "type": "BatchNormalization"
        },
        "BatchNormalizationNode": {
            "attributes": {},
            "transitions": {
                "Conv2DNode": 1.1,
                "DropoutSpatialNode": 1.0,
                "FlattenNode": 1.0,
                "Pool2DNode": 1.1
            },
            "type": "BatchNormalization"
        },
        "Conv2DNode": {
            "attributes": {
                "activation": [
                    "ReLU"
                ],
                "filter_count": [
                    8,
                    16,
                    32,
                    64
                ],
                "kernel_size": [
                    1,
                    3,
                    5,
                    7
                ]
            },
            "transitions": {
                "BatchNormalizationNode": 1.2,
                "Conv2DNode": 0.8,
                "DropoutSpatialNode": 1.1,
                "FlattenNode": 1.0,
                "Pool2DNode": 1.2
            },
            "type": "Conv2D"
        },
        "DenseNode": {
            "attributes": {
                "activation": [
                    "ReLU",
                    "Sigmoid"
                ],
                "output_size": [
                    30,
                    64,
                    128,
                    256
                ]
            },
            "transitions": {
                "BatchNormalizationFlatNode": 1.2,
                "DenseNode": 0.8,
                "DropoutFlatNode": 1.2,
                "OutputNode": 1.0
            },
            "type": "Dense"
        },
        "DropoutFlatNode": {
            "attributes": {
                "rate": [
                    0.1,
                    0.3
                ]
            },
            "transitions": {
                "BatchNormalizationFlatNode": 1.0,
                "DenseNode": 1.0,
                "OutputNode": 0.9
            },
            "type": "Dropout"
        },
        "DropoutSpatialNode": {
            "attributes": {
                "rate": [
                    0.1,
                    0.3
                ]
            },
            "transitions": {
                "BatchNormalizationNode": 1.1,
                "Conv2DNode": 1.1,
                "FlattenNode": 1.0,
                "Pool2DNode": 1.0
            },
            "type": "Dropout"
        },
        "FlattenNode": {
            "attributes": {},
            "transitions": {
                "BatchNormalizationFlatNode": 0.9,
                "DenseNode": 1.0,
                "OutputNode": 0.8
            },
            "type": "Flatten"
        },
        "InputNode": {
            "attributes": {
                "shape": [
                    [
                        20,
                        4,
                        1
                    ]
                ]
            },
            "transitions": {
                "Conv2DNode": 1.0
            },
            "type": "Input"
        },
        "OutputNode": {
            "attributes": {
                "activation": [
                    "Softmax"
                ],
                "output_size": [
                    2
                ],
                "shape": [
                    2
                ]
            },
            "transitions": {},
            "type": "Output"
        },
        "Pool2DNode": {
            "attributes": {
                "pool_size": [
                    2
                ],
                "pool_type": [
                    "max",
                    "average"
                ],
                "stride": [
                    2,
                    3
                ]
            },
            "transitions": {
                "BatchNormalizationNode": 1.1,
                "Conv2DNode": 1.1,
                "FlattenNode": 1.0
            },
            "type": "Pool2D"
        }
    },
    "max_depth": 3,
    "script": "",
    "settings_file": "/Users/jackie16201/Desktop/autoML/final_clean_BioSeqAutoML_for_publication/settings/default.yaml"
}[0m
2022-08-16 12:18:27,516 - log.py - [37m[42m[1m------------------------------STARTING ACO SEARCH-------------------------------[0m
2022-08-16 12:18:33,113 - log.py - [32m======= 
 Ant: 0x14fcbd790 
 Loss: 0.348124 
 Accuracy: 0.830000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:5) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 563e40952627dcc47deb95da729e83ef3aeb5c262b39676d340587dc318b9fcc 
=======[0m
2022-08-16 12:18:33,113 - log.py - [37m[42m[1m---------------------------Current search depth is 1----------------------------[0m
2022-08-16 12:18:33,114 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 1--------------------------------[0m
2022-08-16 12:18:34,449 - log.py - [32m======= 
 Ant: 0x154729050 
 Loss: 0.564937 
 Accuracy: 0.752500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:16, kernel_size:1) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 2020326fcc66744cf9c5b5fcd030cda7670b21a50a8527a50d8c9e702b98e914 
=======[0m
2022-08-16 12:18:34,450 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 2--------------------------------[0m
2022-08-16 12:18:36,134 - log.py - [32m======= 
 Ant: 0x153349c90 
 Loss: 0.321956 
 Accuracy: 0.865000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: c5fbacefc7efc00b3c03d67a2d03cb7952d813508204c64b08626540dee1d5c0 
=======[0m
2022-08-16 12:18:36,135 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 3--------------------------------[0m
2022-08-16 12:18:37,538 - log.py - [32m======= 
 Ant: 0x152b25050 
 Loss: 0.539321 
 Accuracy: 0.752500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:8, kernel_size:7) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: fd58622cae562eb65e285af9ea06a34d3fd82f6313eade554327022d48812192 
=======[0m
2022-08-16 12:18:37,538 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 4--------------------------------[0m
2022-08-16 12:18:38,881 - log.py - [32m======= 
 Ant: 0x153e87210 
 Loss: 0.544165 
 Accuracy: 0.752500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:1) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 812ce2107962276b0b88bf23dabe6a4d1cf18e6b02e49383e2df14a02a12bcf4 
=======[0m
2022-08-16 12:18:38,881 - log.py - [37m[42m[1m-------------------------------NEW BEST ANT FOUND-------------------------------[0m
2022-08-16 12:18:38,882 - log.py - [30m[47m[1m---------------------------BEST ANT DURING ITERATION----------------------------[0m
2022-08-16 12:18:38,882 - log.py - [32m======= 
 Ant: 0x153349c90 
 Loss: 0.321956 
 Accuracy: 0.865000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: c5fbacefc7efc00b3c03d67a2d03cb7952d813508204c64b08626540dee1d5c0 
=======[0m
2022-08-16 12:18:38,883 - log.py - [37m[42m[1m---------------------------Current search depth is 2----------------------------[0m
2022-08-16 12:18:38,883 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 1--------------------------------[0m
2022-08-16 12:18:41,848 - log.py - [32m======= 
 Ant: 0x14fcbd250 
 Loss: 0.444814 
 Accuracy: 0.952500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> BatchNormalizationNode() -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 74bd244ad0989ee5f35ab70f563773a9b01125d1663b3ee6ce69a4e1fed3548b 
=======[0m
2022-08-16 12:18:41,849 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 2--------------------------------[0m
2022-08-16 12:18:43,221 - log.py - [32m======= 
 Ant: 0x155333290 
 Loss: 0.661876 
 Accuracy: 0.727500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:16, kernel_size:3) -> Pool2DNode(pool_size:2, pool_type:average, stride:3) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: b1244e61c72dee741c733624072b3ff426fb56cc19f5e3b99d5a97b0d862738a 
=======[0m
2022-08-16 12:18:43,222 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 3--------------------------------[0m
2022-08-16 12:18:44,673 - log.py - [32m======= 
 Ant: 0x1542b52d0 
 Loss: 0.426980 
 Accuracy: 0.760000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:64, kernel_size:7) -> Pool2DNode(pool_size:2, pool_type:max, stride:3) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: f14030a431a89ca5a8ffac846bbf505e91148c23db0ca1650f5b07cb71b059ca 
=======[0m
2022-08-16 12:18:44,674 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 4--------------------------------[0m
2022-08-16 12:18:47,329 - log.py - [32m======= 
 Ant: 0x156e01850 
 Loss: 0.336690 
 Accuracy: 0.840000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> Pool2DNode(pool_size:2, pool_type:average, stride:2) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: aaab9e38ae9a3ed92f66c890a46f6c1d530de9b4034a195ab5dfba8caa86b8e5 
=======[0m
2022-08-16 12:18:47,329 - log.py - [37m[42m[1m-------------------------------NEW BEST ANT FOUND-------------------------------[0m
2022-08-16 12:18:47,330 - log.py - [30m[47m[1m---------------------------BEST ANT DURING ITERATION----------------------------[0m
2022-08-16 12:18:47,330 - log.py - [32m======= 
 Ant: 0x14fcbd250 
 Loss: 0.444814 
 Accuracy: 0.952500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> BatchNormalizationNode() -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 74bd244ad0989ee5f35ab70f563773a9b01125d1663b3ee6ce69a4e1fed3548b 
=======[0m
2022-08-16 12:18:47,331 - log.py - [37m[42m[1m---------------------------Current search depth is 3----------------------------[0m
2022-08-16 12:18:47,332 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 1--------------------------------[0m
2022-08-16 12:18:50,323 - log.py - [32m======= 
 Ant: 0x154729a90 
 Loss: 0.381458 
 Accuracy: 0.947500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> BatchNormalizationNode() -> DropoutSpatialNode(rate:0.1) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: ecdce026c66897865a7aced1caed2b3327d0d3a2cabbce9b604cb353028d4fca 
=======[0m
2022-08-16 12:18:50,323 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 2--------------------------------[0m
2022-08-16 12:18:52,783 - log.py - [32m======= 
 Ant: 0x1539c7290 
 Loss: 0.454745 
 Accuracy: 0.922500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:3) -> BatchNormalizationNode() -> DropoutSpatialNode(rate:0.3) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: e3115c1c7958519bfe3b12a87c17aef0e8b3c62bca44e83be261a4564398817e 
=======[0m
2022-08-16 12:18:52,784 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 3--------------------------------[0m
2022-08-16 12:18:54,866 - log.py - [32m======= 
 Ant: 0x1552a1250 
 Loss: 0.578698 
 Accuracy: 0.920000 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:16, kernel_size:7) -> BatchNormalizationNode() -> Pool2DNode(pool_size:2, pool_type:average, stride:2) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 31136733722cabf211bd6ee093529a847e056cda5452eb85c1b78abe90a4c46a 
=======[0m
2022-08-16 12:18:54,866 - log.py - [30m[47m[1m--------------------------------GENERATING ANT 4--------------------------------[0m
2022-08-16 12:18:58,560 - log.py - [32m======= 
 Ant: 0x1550c8d10 
 Loss: 0.537843 
 Accuracy: 0.877500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:3) -> BatchNormalizationNode() -> Conv2DNode(activation:ReLU, filter_count:8, kernel_size:3) -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: d067ff5a9de62f8c2d4c7dbbc55035d2551a14475dd60fdd7c97a3b6dfcd753d 
=======[0m
2022-08-16 12:18:58,561 - log.py - [30m[47m[1m---------------------------BEST ANT DURING ITERATION----------------------------[0m
2022-08-16 12:18:58,561 - log.py - [32m======= 
 Ant: 0x14fcbd250 
 Loss: 0.444814 
 Accuracy: 0.952500 
 Path: InputNode(shape:(20, 4, 1)) -> Conv2DNode(activation:ReLU, filter_count:32, kernel_size:7) -> BatchNormalizationNode() -> FlattenNode() -> OutputNode(activation:Softmax, output_size:2, shape:2) 
 Hash: 74bd244ad0989ee5f35ab70f563773a9b01125d1663b3ee6ce69a4e1fed3548b 
=======[0m
2022-08-16 12:18:59,113 - log.py - [30m[47m[1m-----------------------EVALUATING PERFORMANCE ON TEST SET-----------------------[0m
2022-08-16 12:18:59,219 - log.py - [32mAccuracy is 0.952500 and loss is 0.444814[0m
2022-08-16 12:19:07,078 - log.py - [30m[47m[1m-----------------------EVALUATING PERFORMANCE ON TEST SET-----------------------[0m
2022-08-16 12:19:07,185 - log.py - [32mAccuracy is 0.965000 and loss is 0.350942[0m
